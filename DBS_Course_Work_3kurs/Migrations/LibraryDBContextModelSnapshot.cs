// <auto-generated />
using System;
using DBS_Course_Work_3kurs.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBSCourseWork3kurs.Migrations
{
    [DbContext(typeof(LibraryDBContext))]
    partial class LibraryDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DBS_Course_Work_3kurs.Entities.Book", b =>
                {
                    b.Property<int>("Book_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<double>("Collateral_value")
                        .HasColumnType("double");

                    b.Property<string>("Genre")
                        .HasColumnType("longtext");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Book_Id");

                    b.ToTable("books");
                });

            modelBuilder.Entity("DBS_Course_Work_3kurs.Entities.Customer", b =>
                {
                    b.Property<int>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int>("Discount_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Paternal_name")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.HasKey("Customer_Id");

                    b.HasIndex("Discount_Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("DBS_Course_Work_3kurs.Entities.Discount", b =>
                {
                    b.Property<int>("Discount_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Discount_Id");

                    b.ToTable("discounts");
                });

            modelBuilder.Entity("DBS_Course_Work_3kurs.Entities.Fine", b =>
                {
                    b.Property<int>("Fine_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Payment")
                        .HasColumnType("double");

                    b.HasKey("Fine_Id");

                    b.ToTable("fines");
                });

            modelBuilder.Entity("DBS_Course_Work_3kurs.Entities.Lending", b =>
                {
                    b.Property<int>("Lending_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Actual_return_date")
                        .HasColumnType("date");

                    b.Property<int>("Book_Id")
                        .HasColumnType("int");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<int>("Discount_Id")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Expected_return_date")
                        .HasColumnType("date");

                    b.Property<double>("Final_rental_price")
                        .HasColumnType("double");

                    b.Property<int>("Fine_Id")
                        .HasColumnType("int");

                    b.Property<double>("Initial_rental_price")
                        .HasColumnType("double");

                    b.Property<DateOnly>("Loan_date")
                        .HasColumnType("date");

                    b.HasKey("Lending_Id");

                    b.HasIndex("Book_Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Discount_Id");

                    b.HasIndex("Fine_Id");

                    b.ToTable("lendings");
                });

            modelBuilder.Entity("DBS_Course_Work_3kurs.Entities.Customer", b =>
                {
                    b.HasOne("DBS_Course_Work_3kurs.Entities.Discount", "discount")
                        .WithMany()
                        .HasForeignKey("Discount_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("discount");
                });

            modelBuilder.Entity("DBS_Course_Work_3kurs.Entities.Lending", b =>
                {
                    b.HasOne("DBS_Course_Work_3kurs.Entities.Book", "book")
                        .WithMany()
                        .HasForeignKey("Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBS_Course_Work_3kurs.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBS_Course_Work_3kurs.Entities.Discount", "discount")
                        .WithMany()
                        .HasForeignKey("Discount_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBS_Course_Work_3kurs.Entities.Fine", "fine")
                        .WithMany()
                        .HasForeignKey("Fine_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("book");

                    b.Navigation("discount");

                    b.Navigation("fine");
                });
#pragma warning restore 612, 618
        }
    }
}
